print("Check for Commutativity")


def cummutative():
    # Matrix A
    print("Matrix A")
    # print("Input the values of Matrix A correctly")
    # a11 = int(input("a11: "))
    # a12 = int(input("a12: "))
    # a13 = int(input("a13: "))
    # a21 = int(input("a21: "))
    # a22 = int(input("a22: "))
    # a23 = int(input("a23: "))
    # a31 = int(input("a31: "))
    # a32 = int(input("a32: "))
    # a33 = int(input("a33: "))
    a11, a12, a13 = input("Enter values for Row 1: ").split()
    a11 = int(a11)
    a12 = int(a12)
    a13 = int(a13)
    a21, a22, a23 = input("Enter values for Row 2: ").split()
    a21 = int(a21)
    a22 = int(a22)
    a23 = int(a23)
    a31, a32, a33 = input("Enter values for Row 3: ").split()
    a31 = int(a31)
    a32 = int(a32)
    a33 = int(a33)

    # Matrix B
    print("Matrix B")
    # print("Input the values of Matrix B correctly")
    # b11 = int(input("b11: "))
    # b12 = int(input("b12: "))
    # b13 = int(input("b13: "))
    # b21 = int(input("b21: "))
    # b22 = int(input("b22: "))
    # b23 = int(input("b23: "))
    # b31 = int(input("b31: "))
    # b32 = int(input("b32: "))
    # b33 = int(input("b33: "))
    b11, b12, b13 = input("Enter values for Row 1: ").split()
    b11 = int(b11)
    b12 = int(b12)
    b13 = int(b13)
    b21, b22, b23 = input("Enter values for Row 2: ").split()
    b21 = int(b21)
    b22 = int(b22)
    b23 = int(b23)
    b31, b32, b33 = input("Enter values for Row 3: ").split()
    b31 = int(b31)
    b32 = int(b32)
    b33 = int(b33)

    # Formula for AB
    # Row 1
    r1c1_AB = (a11 * b11) + (a12 * b21) + (a13 * b31)
    r1c2_AB = (a11 * b12) + (a12 * b22) + (a13 * b32)
    r1c3_AB = (a11 * b13) + (a12 * b32) + (a13 * b33)
    # Formula for Row 2
    r2c1_AB = (a21 * b11) + (a22 * a21) + (a23 * b31)
    r2c2_AB = (a21 * b12) + (a22 * b22) + (a23 * b32)
    r2c3_AB = (a21 * b13) + (a22 * b32) + (a23 * b33)
    # Formula for Row 3
    r3c1_AB = (a31 * b11) + (a32 * b21) + (a33 * b31)
    r3c2_AB = (a31 * b12) + (a32 * b22) + (a33 * b32)
    r3c3_AB = (a31 * b13) + (a32 * b32) + (a33 * b33)
    x = (r2c2_AB * r3c3_AB) - (r3c3_AB * r2c2_AB)
    y = (r2c1_AB * r3c3_AB) - (r2c3_AB * r3c1_AB)
    z = (r2c1_AB * r3c2_AB) - (r2c2_AB * r3c1_AB)
    Determinant_AB = (r1c1_AB * x) - (r1c2_AB * y) + (r1c3_AB * z)
    print("Matrix AB =")
    print(f"{r1c1_AB}	{r1c2_AB}	{r1c3_AB}")
    print("{}	{}	{}".format(r2c1_AB, r2c2_AB, r2c3_AB))
    print("{}	{}	{}".format(r3c1_AB, r3c2_AB, r3c3_AB))
    print()
    print(f"Determinant of AB = {Determinant_AB}")
    # Formula for BA
    # Row 1
    r1c1_BA = (b11 * a11) + (b12 * a21) + (b13 * a31)
    r1c2_BA = (b11 * a12) + (b12 * a22) + (b13 * a32)
    r1c3_BA = (b11 * a13) + (b12 * a32) + (b13 * a33)
    # Formula for Row 2
    r2c1_BA = (b21 * a11) + (b22 * a21) + (b23 * a31)
    r2c2_BA = (b21 * a12) + (b22 * a22) + (b23 * a32)
    r2c3_BA = (b21 * a13) + (b22 * a32) + (b23 * a33)
    # Formula for Row 3
    r3c1_BA = (b31 * a11) + (b32 * a21) + (b33 * a31)
    r3c2_BA = (b31 * a12) + (b32 * a22) + (b33 * a32)
    r3c3_BA = (b31 * a13) + (b32 * a32) + (b33 * a33)
    x = (r2c2_BA * r3c3_BA) - (r3c3_BA * r2c2_BA)
    y = (r2c1_BA * r3c3_BA) - (r2c3_BA * r3c1_BA)
    z = (r2c1_BA * r3c2_BA) - (r2c2_BA * r3c1_BA)
    Determinant_BA = (r1c1_BA * x) - (r1c2_BA * y) + (r1c3_BA * z)
    print("Matrix BA =")
    print("{}	{}	{}".format(r1c1_BA, r1c2_BA, r1c3_BA))
    print("{}	{}	{}".format(r2c1_BA, r2c2_BA, r2c3_BA))
    print("{}	{}	{}".format(r3c1_BA, r3c2_BA, r3c3_BA))
    print()
    print(f"Determinant of BA = {Determinant_BA}")
    if Determinant_AB == Determinant_BA:
        print("\nMatrices A and B are commutative!")
    else:
        print("\nOops! Matrices A and B are Non-commutative")

cummutative()